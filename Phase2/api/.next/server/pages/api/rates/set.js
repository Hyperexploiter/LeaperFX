"use strict";(()=>{var e={};e.id=946,e.ids=[946],e.modules={1495:e=>{e.exports=require("ioredis")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4580:e=>{e.exports=require("node-cache")},298:e=>{e.exports=require("rate-limiter-flexible")},1467:e=>{e.exports=import("@vercel/kv")},6555:e=>{e.exports=import("uuid")},2471:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{config:()=>m,default:()=>l,routeModule:()=>d});var i=r(1802),a=r(7153),n=r(6249),o=r(5410),u=e([o]);o=(u.then?(await u)():u)[0];let l=(0,n.l)(o,"default"),m=(0,n.l)(o,"config"),d=new i.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/rates/set",pathname:"/api/rates/set",bundlePath:"",filename:""},userland:o});s()}catch(e){s(e)}})},7234:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{qQ:()=>u});var i=r(298),a=r(8008),n=e([a]);a=(n.then?(await n)():n)[0];class o{constructor(){this.limiters=new Map,this.isRedisAvailable=!!(process.env.UPSTASH_REDIS_REST_URL&&process.env.UPSTASH_REDIS_REST_TOKEN),this.initializeDefaultLimiters()}static getInstance(){return o.instance||(o.instance=new o),o.instance}initializeDefaultLimiters(){this.createLimiter("api",{windowMs:6e4,maxRequests:parseInt(process.env.RATE_LIMIT_REQUESTS||"1000")}),this.createLimiter("data",{windowMs:6e4,maxRequests:500}),this.createLimiter("config",{windowMs:6e4,maxRequests:100}),this.createLimiter("health",{windowMs:6e4,maxRequests:60}),this.createLimiter("auth",{windowMs:3e5,maxRequests:20}),this.createLimiter("ws",{windowMs:3e5,maxRequests:10}),this.createLimiter("rates",{windowMs:6e4,maxRequests:200}),this.createLimiter("market_data",{windowMs:6e4,maxRequests:1e3})}createLimiter(e,t){let r;let s={keyPrefix:`rl_${e}`,points:t.maxRequests,duration:Math.floor(t.windowMs/1e3),blockDuration:Math.floor(t.windowMs/1e3),skipSuccessfulRequests:t.skipSuccessfulRequests||!1,skipFailedRequests:t.skipFailedRequests||!1};if(this.isRedisAvailable)try{r=new i.RateLimiterRedis({...s,storeClient:this.getRedisClient()})}catch(t){console.warn(`[RateLimit] Redis unavailable for ${e}, falling back to memory:`,t),r=new i.RateLimiterMemory(s)}else r=new i.RateLimiterMemory(s);this.limiters.set(e,r)}getRedisClient(){let e=r(1495);if(process.env.KV_URL)return new e(process.env.KV_URL);if(process.env.UPSTASH_REDIS_REST_URL)return new e({host:new URL(process.env.UPSTASH_REDIS_REST_URL).hostname,port:parseInt(new URL(process.env.UPSTASH_REDIS_REST_URL).port)||6379,password:process.env.UPSTASH_REDIS_REST_TOKEN,tls:{}});throw Error("No Redis configuration found")}async checkRateLimit(e,t="api"){let r=this.limiters.get(t);if(!r)throw Error(`Rate limiter not found for category: ${t}`);let s=a.t7.getRateLimitKey(e,t);try{let e=await r.consume(s);return{limit:r.points,remaining:e.remainingPoints||0,reset:Date.now()+(e.msBeforeNext||0)}}catch(e){return{limit:r.points,remaining:0,reset:Date.now()+(e.msBeforeNext||0),retryAfter:Math.round((e.msBeforeNext||0)/1e3)}}}async applyRateLimit(e,t,r="api"){try{let s=await this.checkRateLimit(e,r);if(t.setHeader("X-RateLimit-Limit",s.limit.toString()),t.setHeader("X-RateLimit-Remaining",s.remaining.toString()),t.setHeader("X-RateLimit-Reset",s.reset.toString()),s.retryAfter)return t.setHeader("Retry-After",s.retryAfter.toString()),t.status(429).json({success:!1,error:"Rate limit exceeded",code:"RATE_LIMIT_EXCEEDED",retryAfter:s.retryAfter,timestamp:Date.now(),requestId:a.t7.generateRequestId()}),!1;return!0}catch(e){return console.error("[RateLimit] Error applying rate limit:",e),!0}}async getRateLimitStatus(e,t="api"){let r=this.limiters.get(t);if(!r)throw Error(`Rate limiter not found for category: ${t}`);let s=a.t7.getRateLimitKey(e,t);try{let e=await r.get(s);return{limit:r.points,remaining:e?e.remainingPoints:r.points,reset:Date.now()+(e?e.msBeforeNext:0)}}catch(e){return console.error("[RateLimit] Error getting status:",e),{limit:r.points,remaining:r.points,reset:Date.now()+6e4}}}async resetRateLimit(e,t="api"){let r=this.limiters.get(t);if(!r)throw Error(`Rate limiter not found for category: ${t}`);let s=a.t7.getRateLimitKey(e,t);await r.delete(s)}createCustomLimiter(e,t){this.createLimiter(e,t)}getLimiters(){return Array.from(this.limiters.keys())}middleware(e="api"){return async(t,r,s)=>{let i=await this.applyRateLimit(t,r,e);return i&&s&&s(),i}}async checkIPRateLimit(e,t){let r=a.t7.getClientIP(e),s=`ip_rl:${r}`,n=new i.RateLimiterMemory({keyPrefix:"ip_rate_limit",points:t.maxRequests,duration:Math.floor(t.windowMs/1e3),blockDuration:Math.floor(t.windowMs/1e3)});try{let e=await n.consume(s);return{limit:t.maxRequests,remaining:e.remainingPoints||0,reset:Date.now()+(e.msBeforeNext||0)}}catch(e){return{limit:t.maxRequests,remaining:0,reset:Date.now()+(e.msBeforeNext||0),retryAfter:Math.round((e.msBeforeNext||0)/1e3)}}}}let u=o.getInstance();s()}catch(e){s(e)}})},5410:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{config:()=>m,default:()=>l});var i=r(8008),a=r(7234),n=r(2057),o=r(704),u=e([i,a,n,o]);async function l(e,t){let r=i.t7.createSecurityContext(e);i.t7.setSecurityHeaders(t);let s=i.t7.getCorsHeaders(e.headers.origin);if(Object.entries(s).forEach(([e,r])=>{t.setHeader(e,r)}),"OPTIONS"===e.method){t.status(200).end();return}if("POST"!==e.method&&"PUT"!==e.method){t.status(405).json({success:!1,error:"Method not allowed",timestamp:Date.now(),requestId:r.requestId});return}try{let s=await a.qQ.applyRateLimit(e,t,"rates");if(!s)return;if(!i.t7.validateApiKey(e)){t.status(401).json({success:!1,error:"Invalid or missing API key",timestamp:Date.now(),requestId:r.requestId});return}let u=i.t7.validateRequest(e,{currencyPair:{required:!0,type:"string",pattern:/^[A-Z]{3}[\/]?[A-Z]{3}$/},spread:{type:"number",min:.001,max:.2},buyRate:{type:"number",min:0},sellRate:{type:"number",min:0},source:{required:!0,type:"string",enum:["manual","calculated"]},storeId:{type:"string",minLength:1}});if(u.length>0){t.status(400).json({success:!1,error:"Validation failed",details:u,timestamp:Date.now(),requestId:r.requestId});return}let l=i.t7.sanitizeInput({currencyPair:e.body.currencyPair,spread:e.body.spread?parseFloat(e.body.spread):void 0,buyRate:e.body.buyRate?parseFloat(e.body.buyRate):void 0,sellRate:e.body.sellRate?parseFloat(e.body.sellRate):void 0,source:e.body.source,storeId:e.body.storeId});if(n.Vy.getStatus().isRunning||await n.Vy.start(),l.buyRate&&l.sellRate){if(l.buyRate<=l.sellRate){t.status(400).json({success:!1,error:"Buy rate must be higher than sell rate",timestamp:Date.now(),requestId:r.requestId});return}let e=(l.buyRate+l.sellRate)/2,s=(l.buyRate-l.sellRate)/e;if(l.spread){let e=Math.abs(s-l.spread);if(e>.001){t.status(400).json({success:!1,error:"Spread is inconsistent with buy/sell rates",details:{providedSpread:l.spread,calculatedSpread:s,difference:e},timestamp:Date.now(),requestId:r.requestId});return}}else l.spread=s}try{let e=await n.Vy.updateRateManually(l);o.r6.isRunning()&&o.r6.broadcastRateUpdate([e]),console.log(`[Rates] Rate updated by ${l.storeId||"system"}: ${l.currencyPair} - Spread: ${(100*e.spread).toFixed(2)}%`),t.status(200).json({success:!0,data:e,timestamp:Date.now(),requestId:r.requestId})}catch(e){console.error("[Rates] Update error:",e),t.status(400).json({success:!1,error:e instanceof Error?e.message:"Failed to update rate",timestamp:Date.now(),requestId:r.requestId})}}catch(e){console.error("[Rates] Set error:",e),t.status(500).json({success:!1,error:"Internal server error",timestamp:Date.now(),requestId:r.requestId})}}[i,a,n,o]=u.then?(await u)():u;let m={api:{responseLimit:"8mb"}};s()}catch(e){s(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[924,704],()=>r(2471));module.exports=s})();