"use strict";(()=>{var e={};e.id=208,e.ids=[208],e.modules={1495:e=>{e.exports=require("ioredis")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4580:e=>{e.exports=require("node-cache")},298:e=>{e.exports=require("rate-limiter-flexible")},1467:e=>{e.exports=import("@vercel/kv")},6555:e=>{e.exports=import("uuid")},3917:(e,t,s)=>{s.a(e,async(e,i)=>{try{s.r(t),s.d(t,{config:()=>c,default:()=>l,routeModule:()=>m});var r=s(1802),a=s(7153),n=s(6249),o=s(1126),u=e([o]);o=(u.then?(await u)():u)[0];let l=(0,n.l)(o,"default"),c=(0,n.l)(o,"config"),m=new r.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/config/profiles",pathname:"/api/config/profiles",bundlePath:"",filename:""},userland:o});i()}catch(e){i(e)}})},7234:(e,t,s)=>{s.a(e,async(e,i)=>{try{s.d(t,{qQ:()=>u});var r=s(298),a=s(8008),n=e([a]);a=(n.then?(await n)():n)[0];class o{constructor(){this.limiters=new Map,this.isRedisAvailable=!!(process.env.UPSTASH_REDIS_REST_URL&&process.env.UPSTASH_REDIS_REST_TOKEN),this.initializeDefaultLimiters()}static getInstance(){return o.instance||(o.instance=new o),o.instance}initializeDefaultLimiters(){this.createLimiter("api",{windowMs:6e4,maxRequests:parseInt(process.env.RATE_LIMIT_REQUESTS||"1000")}),this.createLimiter("data",{windowMs:6e4,maxRequests:500}),this.createLimiter("config",{windowMs:6e4,maxRequests:100}),this.createLimiter("health",{windowMs:6e4,maxRequests:60}),this.createLimiter("auth",{windowMs:3e5,maxRequests:20}),this.createLimiter("ws",{windowMs:3e5,maxRequests:10}),this.createLimiter("rates",{windowMs:6e4,maxRequests:200}),this.createLimiter("market_data",{windowMs:6e4,maxRequests:1e3})}createLimiter(e,t){let s;let i={keyPrefix:`rl_${e}`,points:t.maxRequests,duration:Math.floor(t.windowMs/1e3),blockDuration:Math.floor(t.windowMs/1e3),skipSuccessfulRequests:t.skipSuccessfulRequests||!1,skipFailedRequests:t.skipFailedRequests||!1};if(this.isRedisAvailable)try{s=new r.RateLimiterRedis({...i,storeClient:this.getRedisClient()})}catch(t){console.warn(`[RateLimit] Redis unavailable for ${e}, falling back to memory:`,t),s=new r.RateLimiterMemory(i)}else s=new r.RateLimiterMemory(i);this.limiters.set(e,s)}getRedisClient(){let e=s(1495);if(process.env.KV_URL)return new e(process.env.KV_URL);if(process.env.UPSTASH_REDIS_REST_URL)return new e({host:new URL(process.env.UPSTASH_REDIS_REST_URL).hostname,port:parseInt(new URL(process.env.UPSTASH_REDIS_REST_URL).port)||6379,password:process.env.UPSTASH_REDIS_REST_TOKEN,tls:{}});throw Error("No Redis configuration found")}async checkRateLimit(e,t="api"){let s=this.limiters.get(t);if(!s)throw Error(`Rate limiter not found for category: ${t}`);let i=a.t7.getRateLimitKey(e,t);try{let e=await s.consume(i);return{limit:s.points,remaining:e.remainingPoints||0,reset:Date.now()+(e.msBeforeNext||0)}}catch(e){return{limit:s.points,remaining:0,reset:Date.now()+(e.msBeforeNext||0),retryAfter:Math.round((e.msBeforeNext||0)/1e3)}}}async applyRateLimit(e,t,s="api"){try{let i=await this.checkRateLimit(e,s);if(t.setHeader("X-RateLimit-Limit",i.limit.toString()),t.setHeader("X-RateLimit-Remaining",i.remaining.toString()),t.setHeader("X-RateLimit-Reset",i.reset.toString()),i.retryAfter)return t.setHeader("Retry-After",i.retryAfter.toString()),t.status(429).json({success:!1,error:"Rate limit exceeded",code:"RATE_LIMIT_EXCEEDED",retryAfter:i.retryAfter,timestamp:Date.now(),requestId:a.t7.generateRequestId()}),!1;return!0}catch(e){return console.error("[RateLimit] Error applying rate limit:",e),!0}}async getRateLimitStatus(e,t="api"){let s=this.limiters.get(t);if(!s)throw Error(`Rate limiter not found for category: ${t}`);let i=a.t7.getRateLimitKey(e,t);try{let e=await s.get(i);return{limit:s.points,remaining:e?e.remainingPoints:s.points,reset:Date.now()+(e?e.msBeforeNext:0)}}catch(e){return console.error("[RateLimit] Error getting status:",e),{limit:s.points,remaining:s.points,reset:Date.now()+6e4}}}async resetRateLimit(e,t="api"){let s=this.limiters.get(t);if(!s)throw Error(`Rate limiter not found for category: ${t}`);let i=a.t7.getRateLimitKey(e,t);await s.delete(i)}createCustomLimiter(e,t){this.createLimiter(e,t)}getLimiters(){return Array.from(this.limiters.keys())}middleware(e="api"){return async(t,s,i)=>{let r=await this.applyRateLimit(t,s,e);return r&&i&&i(),r}}async checkIPRateLimit(e,t){let s=a.t7.getClientIP(e),i=`ip_rl:${s}`,n=new r.RateLimiterMemory({keyPrefix:"ip_rate_limit",points:t.maxRequests,duration:Math.floor(t.windowMs/1e3),blockDuration:Math.floor(t.windowMs/1e3)});try{let e=await n.consume(i);return{limit:t.maxRequests,remaining:e.remainingPoints||0,reset:Date.now()+(e.msBeforeNext||0)}}catch(e){return{limit:t.maxRequests,remaining:0,reset:Date.now()+(e.msBeforeNext||0),retryAfter:Math.round((e.msBeforeNext||0)/1e3)}}}}let u=o.getInstance();i()}catch(e){i(e)}})},1126:(e,t,s)=>{s.a(e,async(e,i)=>{try{s.r(t),s.d(t,{config:()=>R,default:()=>l});var r=s(8008),a=s(7234),n=s(936),o=s(6555),u=e([r,a,n,o]);async function l(e,t){let s=r.t7.createSecurityContext(e);r.t7.setSecurityHeaders(t);let i=r.t7.getCorsHeaders(e.headers.origin);if(Object.entries(i).forEach(([e,s])=>{t.setHeader(e,s)}),"OPTIONS"===e.method){t.status(200).end();return}try{let i=await a.qQ.applyRateLimit(e,t,"config");if(!i)return;if(!r.t7.validateApiKey(e)){t.status(401).json({success:!1,error:"Invalid or missing API key",timestamp:Date.now(),requestId:s.requestId});return}switch(e.method){case"GET":await c(e,t,s);break;case"POST":await m(e,t,s);break;case"PUT":await d(e,t,s);break;case"DELETE":await p(e,t,s);break;default:t.status(405).json({success:!1,error:"Method not allowed",timestamp:Date.now(),requestId:s.requestId})}}catch(e){console.error("[Config Profiles] API error:",e),t.status(500).json({success:!1,error:"Internal server error",timestamp:Date.now(),requestId:s.requestId})}}async function c(e,t,s){let{id:i}=r.t7.sanitizeInput(e.query);if(i){let e=await n.Fs.getProfile(i);if(!e){t.status(404).json({success:!1,error:`Profile not found: ${i}`,timestamp:Date.now(),requestId:s.requestId});return}t.status(200).json({success:!0,data:e,timestamp:Date.now(),requestId:s.requestId})}else{let e=await n.Fs.getAllProfiles();e.sort((e,t)=>e.name.localeCompare(t.name)),t.status(200).json({success:!0,data:e,timestamp:Date.now(),requestId:s.requestId})}}async function m(e,t,s){let i=r.t7.sanitizeInput(e.body),a=f(i);if(a.length>0){t.status(400).json({success:!1,error:"Validation failed",details:a,timestamp:Date.now(),requestId:s.requestId});return}let u=Date.now(),l={id:(0,o.v4)(),name:i.name,description:i.description,values:i.values||{},isActive:i.isActive||!1,createdAt:u,updatedAt:u,version:1};l.isActive&&await w();let c=await n.Fs.setProfile(l);if(!c){t.status(500).json({success:!1,error:"Failed to create profile",timestamp:Date.now(),requestId:s.requestId});return}t.status(201).json({success:!0,data:l,timestamp:Date.now(),requestId:s.requestId})}async function d(e,t,s){let{id:i}=r.t7.sanitizeInput(e.query);if(!i){t.status(400).json({success:!1,error:"Profile ID is required",timestamp:Date.now(),requestId:s.requestId});return}let a=await n.Fs.getProfile(i);if(!a){t.status(404).json({success:!1,error:`Profile not found: ${i}`,timestamp:Date.now(),requestId:s.requestId});return}let o=r.t7.sanitizeInput(e.body),u=f(o,!0);if(u.length>0){t.status(400).json({success:!1,error:"Validation failed",details:u,timestamp:Date.now(),requestId:s.requestId});return}let l={...a,name:void 0!==o.name?o.name:a.name,description:void 0!==o.description?o.description:a.description,values:void 0!==o.values?o.values:a.values,isActive:void 0!==o.isActive?o.isActive:a.isActive,updatedAt:Date.now(),version:a.version+1};l.isActive&&!a.isActive&&await w();let c=await n.Fs.setProfile(l);if(!c){t.status(500).json({success:!1,error:"Failed to update profile",timestamp:Date.now(),requestId:s.requestId});return}t.status(200).json({success:!0,data:l,timestamp:Date.now(),requestId:s.requestId})}async function p(e,t,s){let{id:i}=r.t7.sanitizeInput(e.query);if(!i){t.status(400).json({success:!1,error:"Profile ID is required",timestamp:Date.now(),requestId:s.requestId});return}let a=await n.Fs.getProfile(i);if(!a){t.status(404).json({success:!1,error:`Profile not found: ${i}`,timestamp:Date.now(),requestId:s.requestId});return}let o=await n.Fs.delete(`profile:${i}`);if(!o){t.status(500).json({success:!1,error:"Failed to delete profile",timestamp:Date.now(),requestId:s.requestId});return}t.status(200).json({success:!0,data:null,timestamp:Date.now(),requestId:s.requestId})}function f(e,t=!1){let s=[];return e&&"object"==typeof e?(t||e.name&&"string"==typeof e.name?void 0!==e.name&&("string"!=typeof e.name?s.push({field:"name",message:"Name must be a string",value:e.name}):(e.name.length<1||e.name.length>100)&&s.push({field:"name",message:"Name must be between 1 and 100 characters",value:e.name})):s.push({field:"name",message:"Name is required and must be a string",value:e.name}),void 0!==e.description&&"string"!=typeof e.description&&s.push({field:"description",message:"Description must be a string",value:e.description}),void 0!==e.values&&("object"!=typeof e.values||Array.isArray(e.values))&&s.push({field:"values",message:"Values must be an object",value:e.values}),void 0!==e.isActive&&"boolean"!=typeof e.isActive&&s.push({field:"isActive",message:"isActive must be a boolean",value:e.isActive})):s.push({field:"root",message:"Request body must be an object",value:e}),s}async function w(){try{let e=await n.Fs.getAllProfiles();for(let t of e)t.isActive&&(t.isActive=!1,t.updatedAt=Date.now(),t.version+=1,await n.Fs.setProfile(t))}catch(e){console.error("[Config Profiles] Error deactivating profiles:",e)}}[r,a,n,o]=u.then?(await u)():u;let R={api:{responseLimit:"8mb"}};i()}catch(e){i(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var s=e=>t(t.s=e),i=t.X(0,[924],()=>s(3917));module.exports=i})();