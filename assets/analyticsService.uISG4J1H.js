import{t as y,i as h,w as v}from"./index.iKL0yAvO.js";class D{async getDailyPerformance(t=7){try{const r=await y.getTransactions(),a=new Date,n=new Date(a);n.setDate(n.getDate()-t);const l={};for(let i=new Date(n);i<=a;i.setDate(i.getDate()+1)){const s=i.toISOString().split("T")[0];l[s]={date:s,transactions:0,volume:0,profit:0}}return r.forEach(i=>{const s=i.date.split(" ")[0];l[s]&&(l[s].transactions+=1,l[s].volume+=i.toAmount,l[s].profit+=i.profit)}),Object.values(l).sort((i,s)=>new Date(i.date).getTime()-new Date(s.date).getTime())}catch(r){return console.error("Error fetching daily performance:",r),[]}}async getCurrencyPerformance(){try{const t=await y.getTransactions(),r={};return t.forEach(a=>{const n=a.toCurrency;r[n]||(r[n]={currency:n,transactions:0,volume:0,profit:0}),r[n].transactions+=1,r[n].volume+=a.toAmount,r[n].profit+=a.profit}),Object.values(r).sort((a,n)=>n.volume-a.volume)}catch(t){return console.error("Error fetching currency performance:",t),[]}}async getBusinessInsights(){const t=[];try{const[r,a,n]=await Promise.all([y.getTransactions(),h.getInventory(),this.getCurrencyPerformance()]),l=a.filter(o=>o.amount<1e3);if(l.length>0&&t.push({type:"warning",title:"Low Inventory Alert",description:`${l.length} currencies have low inventory levels. Consider restocking ${l.map(o=>o.currency).join(", ")}.`,priority:8}),n.length>0){const o=n[0];o.transactions>5&&t.push({type:"opportunity",title:"High Demand Currency",description:`${o.currency} shows strong demand with ${o.transactions} transactions. Consider increasing inventory.`,priority:6})}const i=r.filter(o=>{const g=new Date(o.date),d=new Date(Date.now()-1440*60*1e3);return g>d});i.length===0?t.push({type:"warning",title:"Low Activity",description:"No transactions in the last 24 hours. Consider marketing campaigns or rate adjustments.",priority:7}):i.length>10&&t.push({type:"info",title:"High Activity",description:`${i.length} transactions in the last 24 hours. Great business day!`,priority:4});const s=r.filter(o=>o.complianceStatus==="lctr_required"||o.complianceStatus==="enhanced_records");if(s.length>0){const o=s.filter(g=>g.lctrDeadline?new Date(g.lctrDeadline)<new Date:!1);o.length>0&&t.push({type:"warning",title:"Compliance Deadline Alert",description:`${o.length} FINTRAC reports are overdue. Please complete compliance requirements immediately.`,priority:10})}const f=r.reduce((o,g)=>o+g.profit,0),u=r.reduce((o,g)=>o+g.toAmount,0),p=u>0?f/u*100:0;p<1?t.push({type:"warning",title:"Low Profit Margins",description:`Average profit margin is ${p.toFixed(2)}%. Consider adjusting commission rates.`,priority:6}):p>3&&t.push({type:"opportunity",title:"Strong Profit Margins",description:`Excellent profit margin of ${p.toFixed(2)}%. Consider competitive pricing strategies.`,priority:5})}catch(r){console.error("Error generating business insights:",r),t.push({type:"warning",title:"Analytics Error",description:"Unable to generate insights due to data processing error.",priority:3})}return t.sort((r,a)=>a.priority-r.priority)}async getProfitAnalysis(){try{const t=await y.getTransactions(),r=await this.getCurrencyPerformance();if(t.length===0)return{totalProfit:0,averageProfitPerTransaction:0,profitTrend:0,topProfitCurrency:"N/A",profitByTimeOfDay:[],profitMargins:[]};const a=t.reduce((e,c)=>e+c.profit,0),n=a/t.length,l=new Date,i=t.filter(e=>{const c=new Date(e.date);return(l.getTime()-c.getTime())/(1e3*60*60*24)<=7}),s=t.filter(e=>{const c=new Date(e.date),m=(l.getTime()-c.getTime())/(1e3*60*60*24);return m>7&&m<=14}),f=i.reduce((e,c)=>e+c.profit,0),u=s.reduce((e,c)=>e+c.profit,0),p=u>0?(f-u)/u*100:0,o=r.length>0?r.reduce((e,c)=>c.profit>e.profit?c:e).currency:"N/A",g={};for(let e=0;e<24;e++)g[e]=0;t.forEach(e=>{const c=new Date(e.date).getHours();g[c]+=e.profit});const d=Object.entries(g).map(([e,c])=>({hour:parseInt(e),profit:c})),w=r.map(e=>({currency:e.currency,margin:e.volume>0?e.profit/e.volume*100:0}));return{totalProfit:a,averageProfitPerTransaction:n,profitTrend:p,topProfitCurrency:o,profitByTimeOfDay:d,profitMargins:w}}catch(t){return console.error("Error calculating profit analysis:",t),{totalProfit:0,averageProfitPerTransaction:0,profitTrend:0,topProfitCurrency:"Error",profitByTimeOfDay:[],profitMargins:[]}}}async getWebsitePerformance(){try{const t=await v.getWebsiteMetrics();return{visitors:t.visitors,pageViews:t.pageViews,calculatorUses:t.calculatorUses,rateLocks:t.rateLocks,rateAlerts:t.rateAlerts,conversionRate:t.conversionRate,topReferrers:[{source:"Google",visits:Math.floor(t.visitors*.4)},{source:"Direct",visits:Math.floor(t.visitors*.3)},{source:"Social Media",visits:Math.floor(t.visitors*.2)},{source:"Referral",visits:Math.floor(t.visitors*.1)}],popularPages:[{page:"Currency Calculator",views:Math.floor(t.pageViews*.4)},{page:"Exchange Rates",views:Math.floor(t.pageViews*.3)},{page:"Contact",views:Math.floor(t.pageViews*.2)},{page:"About",views:Math.floor(t.pageViews*.1)}]}}catch(t){return console.error("Error fetching website performance:",t),{visitors:0,pageViews:0,calculatorUses:0,rateLocks:0,rateAlerts:0,conversionRate:0,topReferrers:[],popularPages:[]}}}async getDashboardSummary(){try{const[t,r,a,n]=await Promise.all([y.getTodaysTransactions(),h.getLowInventoryAlerts(),v.getRateLocks(),y.getComplianceTransactions()]),l=t.reduce((p,o)=>p+o.profit,0),i=a.filter(p=>p.status==="active").length,s=n.filter(p=>p.complianceStatus==="lctr_required"||p.complianceStatus==="enhanced_records").length,f=r.length;let u="good";return s>0||f>3?u="critical":(f>0||i>10)&&(u="warning"),{todayTransactions:t.length,todayProfit:l,activeRateLocks:i,pendingCompliance:s,lowInventoryCount:f,systemHealth:u}}catch(t){return console.error("Error generating dashboard summary:",t),{todayTransactions:0,todayProfit:0,activeRateLocks:0,pendingCompliance:0,lowInventoryCount:0,systemHealth:"critical"}}}}const C=new D;export{C as default};
