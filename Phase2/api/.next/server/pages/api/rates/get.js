"use strict";(()=>{var e={};e.id=513,e.ids=[513],e.modules={1495:e=>{e.exports=require("ioredis")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4580:e=>{e.exports=require("node-cache")},298:e=>{e.exports=require("rate-limiter-flexible")},1467:e=>{e.exports=import("@vercel/kv")},6555:e=>{e.exports=import("uuid")},7995:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>u,default:()=>c,routeModule:()=>d});var s=r(1802),i=r(7153),n=r(6249),o=r(9038),l=e([o]);o=(l.then?(await l)():l)[0];let c=(0,n.l)(o,"default"),u=(0,n.l)(o,"config"),d=new s.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/rates/get",pathname:"/api/rates/get",bundlePath:"",filename:""},userland:o});a()}catch(e){a(e)}})},2057:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{Vy:()=>o});var s=r(936),i=e([s]);s=(i.then?(await i)():i)[0];class n{constructor(){this.isRunning=!1,this.rates=new Map,this.thresholds=new Map,this.alerts=[],this.lastUpdate=0,this.sources=new Set(["polygon","twelvedata","coinbase"]),this.subscribers=new Set,this.config={defaultSpread:.02,minSpread:.005,maxSpread:.1,volatilityFactor:.1,liquidityFactor:.05,updateFrequency:3e4}}static getInstance(){return n.instance||(n.instance=new n),n.instance}async start(){if(this.isRunning){console.log("[RateEngine] Already running");return}console.log("[RateEngine] Starting rate engine...");try{await this.loadConfiguration(),this.updateInterval=setInterval(()=>{this.updateRates().catch(e=>{console.error("[RateEngine] Update cycle error:",e)})},this.config.updateFrequency),await this.updateRates(),this.isRunning=!0,console.log("[RateEngine] Started successfully")}catch(e){throw console.error("[RateEngine] Failed to start:",e),e}}stop(){this.isRunning&&(console.log("[RateEngine] Stopping rate engine..."),this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=void 0),this.isRunning=!1,console.log("[RateEngine] Stopped"))}async loadConfiguration(){try{let e=await s.Fs.get("rates:all");if(e){let t=JSON.parse(e);t.forEach(e=>{this.rates.set(e.baseCurrency+e.targetCurrency,e)})}let t=await s.Fs.get("thresholds:all");if(t){let e=JSON.parse(t);e.forEach(e=>{this.thresholds.set(e.currencyPair,e)})}let r=await s.Fs.get("rate_engine:config");r&&(this.config={...this.config,...JSON.parse(r)})}catch(e){console.error("[RateEngine] Error loading configuration:",e)}}async saveConfiguration(){try{let e=Array.from(this.rates.values()),t=Array.from(this.thresholds.values());await Promise.all([s.Fs.setex("rates:all",3600,JSON.stringify(e)),s.Fs.setex("thresholds:all",3600,JSON.stringify(t)),s.Fs.setex("rate_engine:config",3600,JSON.stringify(this.config))])}catch(e){console.error("[RateEngine] Error saving configuration:",e)}}async updateRates(){let e=Date.now();try{console.log("[RateEngine] Updating rates...");let t=this.getCurrencyPairs();for(let e of t)await this.updateRateForPair(e);await this.saveConfiguration(),this.checkThresholds(),this.lastUpdate=Date.now();let r=this.lastUpdate-e;console.log(`[RateEngine] Updated ${t.length} rates in ${r}ms`)}catch(e){console.error("[RateEngine] Error updating rates:",e)}}async updateRateForPair(e){try{let[t,r]=e.split("/"),a=await this.getMarketData(t,r);if(!a){console.warn(`[RateEngine] No market data for ${e}`);return}let i=this.calculateRateWithSpread(a,e);this.rates.set(e.replace("/",""),i),await s.Fs.setex(`rate:${e.replace("/","")}`,60,JSON.stringify(i))}catch(t){console.error(`[RateEngine] Error updating rate for ${e}:`,t)}}async getMarketData(e,t){try{for(let r of this.sources){let a=await this.fetchFromSource(r,e,t);if(a)return a}return null}catch(r){return console.error(`[RateEngine] Error getting market data for ${e}/${t}:`,r),null}}async fetchFromSource(e,t,r){try{switch(e){case"coinbase":return await this.fetchCoinbaseData(t,r);case"polygon":return await this.fetchPolygonData(t,r);case"twelvedata":return await this.fetchTwelveDataData(t,r);default:return null}}catch(t){return console.error(`[RateEngine] Error fetching from ${e}:`,t),null}}async fetchCoinbaseData(e,t){try{let r=`${e}-${t}`,a=await fetch(`https://api.exchange.coinbase.com/products/${r}/ticker`);if(!a.ok)return null;let s=await a.json();return{symbol:r,price:parseFloat(s.price),timestamp:Date.now(),bid:parseFloat(s.bid),ask:parseFloat(s.ask),volume:parseFloat(s.volume),source:"coinbase"}}catch(e){return null}}async fetchPolygonData(e,t){return null}async fetchTwelveDataData(e,t){return null}calculateRateWithSpread(e,t){let r=this.thresholds.get(t),a=r?(r.minSpread+r.maxSpread)/2:this.config.defaultSpread,s=this.calculateVolatilitySpread(e),i=Math.max(Math.min(a+s,this.config.maxSpread),this.config.minSpread),n=e.price*(1+i/2),o=e.price*(1-i/2);return{id:`${t}_${Date.now()}`,baseCurrency:t.split("/")[0]||t.slice(0,3),targetCurrency:t.split("/")[1]||t.slice(3),rate:e.price,spread:i,buyRate:n,sellRate:o,timestamp:e.timestamp,source:"calculated",isActive:!0,lastUpdated:Date.now()}}calculateVolatilitySpread(e){if(!e.changePercent24h)return 0;let t=Math.abs(e.changePercent24h/100);return t*this.config.volatilityFactor}checkThresholds(){for(let[e,t]of this.thresholds){let r=this.rates.get(e.replace("/",""));if(!r)continue;(r.spread<t.minSpread||r.spread>t.maxSpread)&&this.generateAlert({id:`alert_${Date.now()}_${e}`,currencyPair:e,alertType:"threshold_breach",message:`Spread ${(100*r.spread).toFixed(2)}% outside threshold range ${(100*t.minSpread).toFixed(2)}%-${(100*t.maxSpread).toFixed(2)}%`,severity:"medium",timestamp:Date.now(),acknowledged:!1});let a=(Date.now()-r.lastUpdated)/6e4;a>5&&this.generateAlert({id:`alert_${Date.now()}_stale_${e}`,currencyPair:e,alertType:"rate_stale",message:`Rate for ${e} is ${a.toFixed(1)} minutes old`,severity:a>15?"high":"medium",timestamp:Date.now(),acknowledged:!1})}}generateAlert(e){this.alerts.push(e),console.warn(`[RateEngine] Alert: ${e.message}`),this.alerts.length>100&&(this.alerts=this.alerts.slice(-100))}getCurrencyPairs(){return["USD/CAD","EUR/USD","GBP/USD","USD/JPY","AUD/USD","USD/CHF","BTC/USD","ETH/USD","BTC/CAD","ETH/CAD"]}getRate(e){return this.rates.get(e.replace("/",""))||null}getAllRates(){return Array.from(this.rates.values())}async updateRateManually(e){let t=e.currencyPair.replace("/",""),r=this.rates.get(t);if(!r)throw Error(`Rate not found for ${e.currencyPair}`);let a={...r,spread:e.spread||r.spread,buyRate:e.buyRate||r.buyRate,sellRate:e.sellRate||r.sellRate,source:e.source,lastUpdated:Date.now(),storeId:e.storeId};if(a.spread<this.config.minSpread||a.spread>this.config.maxSpread)throw Error(`Spread ${(100*a.spread).toFixed(2)}% outside allowed range ${(100*this.config.minSpread).toFixed(2)}%-${(100*this.config.maxSpread).toFixed(2)}%`);return this.rates.set(t,a),await s.Fs.setex(`rate:${t}`,3600,JSON.stringify(a)),a}async addThreshold(e){this.thresholds.set(e.currencyPair,e),await this.saveConfiguration()}getStatus(){return{isRunning:this.isRunning,lastUpdate:this.lastUpdate,activeSources:Array.from(this.sources),activeSubscriptions:this.subscribers.size,rateCount:this.rates.size,alertCount:this.alerts.length,lockCount:0,performance:{avgUpdateTime:0,maxUpdateTime:0,errorRate:0}}}subscribe(e){this.subscribers.add(e)}unsubscribe(e){this.subscribers.delete(e)}getAlerts(e=50){return this.alerts.slice(-e)}}let o=n.getInstance();a()}catch(e){a(e)}})},7234:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{qQ:()=>l});var s=r(298),i=r(8008),n=e([i]);i=(n.then?(await n)():n)[0];class o{constructor(){this.limiters=new Map,this.isRedisAvailable=!!(process.env.UPSTASH_REDIS_REST_URL&&process.env.UPSTASH_REDIS_REST_TOKEN),this.initializeDefaultLimiters()}static getInstance(){return o.instance||(o.instance=new o),o.instance}initializeDefaultLimiters(){this.createLimiter("api",{windowMs:6e4,maxRequests:parseInt(process.env.RATE_LIMIT_REQUESTS||"1000")}),this.createLimiter("data",{windowMs:6e4,maxRequests:500}),this.createLimiter("config",{windowMs:6e4,maxRequests:100}),this.createLimiter("health",{windowMs:6e4,maxRequests:60}),this.createLimiter("auth",{windowMs:3e5,maxRequests:20}),this.createLimiter("ws",{windowMs:3e5,maxRequests:10}),this.createLimiter("rates",{windowMs:6e4,maxRequests:200}),this.createLimiter("market_data",{windowMs:6e4,maxRequests:1e3})}createLimiter(e,t){let r;let a={keyPrefix:`rl_${e}`,points:t.maxRequests,duration:Math.floor(t.windowMs/1e3),blockDuration:Math.floor(t.windowMs/1e3),skipSuccessfulRequests:t.skipSuccessfulRequests||!1,skipFailedRequests:t.skipFailedRequests||!1};if(this.isRedisAvailable)try{r=new s.RateLimiterRedis({...a,storeClient:this.getRedisClient()})}catch(t){console.warn(`[RateLimit] Redis unavailable for ${e}, falling back to memory:`,t),r=new s.RateLimiterMemory(a)}else r=new s.RateLimiterMemory(a);this.limiters.set(e,r)}getRedisClient(){let e=r(1495);if(process.env.KV_URL)return new e(process.env.KV_URL);if(process.env.UPSTASH_REDIS_REST_URL)return new e({host:new URL(process.env.UPSTASH_REDIS_REST_URL).hostname,port:parseInt(new URL(process.env.UPSTASH_REDIS_REST_URL).port)||6379,password:process.env.UPSTASH_REDIS_REST_TOKEN,tls:{}});throw Error("No Redis configuration found")}async checkRateLimit(e,t="api"){let r=this.limiters.get(t);if(!r)throw Error(`Rate limiter not found for category: ${t}`);let a=i.t7.getRateLimitKey(e,t);try{let e=await r.consume(a);return{limit:r.points,remaining:e.remainingPoints||0,reset:Date.now()+(e.msBeforeNext||0)}}catch(e){return{limit:r.points,remaining:0,reset:Date.now()+(e.msBeforeNext||0),retryAfter:Math.round((e.msBeforeNext||0)/1e3)}}}async applyRateLimit(e,t,r="api"){try{let a=await this.checkRateLimit(e,r);if(t.setHeader("X-RateLimit-Limit",a.limit.toString()),t.setHeader("X-RateLimit-Remaining",a.remaining.toString()),t.setHeader("X-RateLimit-Reset",a.reset.toString()),a.retryAfter)return t.setHeader("Retry-After",a.retryAfter.toString()),t.status(429).json({success:!1,error:"Rate limit exceeded",code:"RATE_LIMIT_EXCEEDED",retryAfter:a.retryAfter,timestamp:Date.now(),requestId:i.t7.generateRequestId()}),!1;return!0}catch(e){return console.error("[RateLimit] Error applying rate limit:",e),!0}}async getRateLimitStatus(e,t="api"){let r=this.limiters.get(t);if(!r)throw Error(`Rate limiter not found for category: ${t}`);let a=i.t7.getRateLimitKey(e,t);try{let e=await r.get(a);return{limit:r.points,remaining:e?e.remainingPoints:r.points,reset:Date.now()+(e?e.msBeforeNext:0)}}catch(e){return console.error("[RateLimit] Error getting status:",e),{limit:r.points,remaining:r.points,reset:Date.now()+6e4}}}async resetRateLimit(e,t="api"){let r=this.limiters.get(t);if(!r)throw Error(`Rate limiter not found for category: ${t}`);let a=i.t7.getRateLimitKey(e,t);await r.delete(a)}createCustomLimiter(e,t){this.createLimiter(e,t)}getLimiters(){return Array.from(this.limiters.keys())}middleware(e="api"){return async(t,r,a)=>{let s=await this.applyRateLimit(t,r,e);return s&&a&&a(),s}}async checkIPRateLimit(e,t){let r=i.t7.getClientIP(e),a=`ip_rl:${r}`,n=new s.RateLimiterMemory({keyPrefix:"ip_rate_limit",points:t.maxRequests,duration:Math.floor(t.windowMs/1e3),blockDuration:Math.floor(t.windowMs/1e3)});try{let e=await n.consume(a);return{limit:t.maxRequests,remaining:e.remainingPoints||0,reset:Date.now()+(e.msBeforeNext||0)}}catch(e){return{limit:t.maxRequests,remaining:0,reset:Date.now()+(e.msBeforeNext||0),retryAfter:Math.round((e.msBeforeNext||0)/1e3)}}}}let l=o.getInstance();a()}catch(e){a(e)}})},9038:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>c,default:()=>l});var s=r(8008),i=r(7234),n=r(2057),o=e([s,i,n]);async function l(e,t){let r=s.t7.createSecurityContext(e);s.t7.setSecurityHeaders(t);let a=s.t7.getCorsHeaders(e.headers.origin);if(Object.entries(a).forEach(([e,r])=>{t.setHeader(e,r)}),"OPTIONS"===e.method){t.status(200).end();return}if("GET"!==e.method){t.status(405).json({success:!1,error:"Method not allowed",timestamp:Date.now(),requestId:r.requestId});return}try{let a=await i.qQ.applyRateLimit(e,t,"rates");if(!a)return;if(!s.t7.validateApiKey(e)){t.status(401).json({success:!1,error:"Invalid or missing API key",timestamp:Date.now(),requestId:r.requestId});return}let{pair:o,storeId:l,all:c}=s.t7.sanitizeInput(e.query);if(n.Vy.getStatus().isRunning||await n.Vy.start(),o){let e=n.Vy.getRate(o);if(!e){t.status(404).json({success:!1,error:`Exchange rate not found for ${o}`,timestamp:Date.now(),requestId:r.requestId});return}if(l&&e.storeId&&e.storeId!==l){t.status(404).json({success:!1,error:`Exchange rate not found for store ${l}`,timestamp:Date.now(),requestId:r.requestId});return}t.status(200).json({success:!0,data:e,timestamp:Date.now(),requestId:r.requestId});return}let u=n.Vy.getAllRates();l&&(u=u.filter(e=>!e.storeId||e.storeId===l)),(u=u.filter(e=>e.isActive)).sort((e,t)=>{let r=`${e.baseCurrency}${e.targetCurrency}`,a=`${t.baseCurrency}${t.targetCurrency}`;return r.localeCompare(a)}),t.status(200).json({success:!0,data:u,timestamp:Date.now(),requestId:r.requestId})}catch(e){console.error("[Rates] Get error:",e),t.status(500).json({success:!1,error:"Internal server error",timestamp:Date.now(),requestId:r.requestId})}}[s,i,n]=o.then?(await o)():o;let c={api:{responseLimit:"8mb"}};a()}catch(e){a(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[924],()=>r(7995));module.exports=a})();